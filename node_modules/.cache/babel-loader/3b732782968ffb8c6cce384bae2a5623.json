{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api';\n\n/*\nThis is an async await function that calls the Covid Tracking API and retrieves the JSON object with the data and makes sure that the URL and data does srill exist at the specified URL.\nIt creates a new array from the \"confirmed, recovered, deaths\" cases that the JSON supplies.\n*/\n\nexport const fetchData = async country => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths\n      }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths\n    };\n  } catch (error) {\n    return error;\n  }\n};\n\n/*\nThis is an async await function that calls the Covid Tracking API and retrieves the JSON object with the data about the daily Covid cases.\nThe data.map creates a new array from calling a function and makes a dictionary with the keys and values.\n*/\n\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\n    return data.map(_ref => {\n      let {\n        positive,\n        recovered,\n        death\n      } = _ref;\n      return {\n        confirmed: positive,\n        recovered,\n        deaths: death\n      };\n    });\n  } catch (error) {\n    return error;\n  }\n};\n\n/*\nThis is an async await function that calls the Covid Tracking API and retrieves the JSON object with the data about the countries Covid cases.\nThe data.map creates a new array from calling a function and makes a variable with the name of the country.\n*/\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"names":["axios","url","fetchData","country","changeableUrl","data","confirmed","recovered","deaths","get","error","fetchDailyData","map","positive","death","fetchCountries","countries","name"],"sources":["/Users/ciankeeney/ReactProjects/CoronaVirusTracker/Corona-Virus-Data/src/api/index.js"],"sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n/*\nThis is an async await function that calls the Covid Tracking API and retrieves the JSON object with the data and makes sure that the URL and data does srill exist at the specified URL.\nIt creates a new array from the \"confirmed, recovered, deaths\" cases that the JSON supplies.\n*/\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths };\n  } catch (error) {\n    return error;\n  }\n};\n\n/*\nThis is an async await function that calls the Covid Tracking API and retrieves the JSON object with the data about the daily Covid cases.\nThe data.map creates a new array from calling a function and makes a dictionary with the keys and values.\n*/\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\n\n    return data.map(({ positive, recovered, death }) => ({ confirmed: positive, recovered, deaths: death }));\n  } catch (error) {\n    return error;\n  }\n};\n\n/*\nThis is an async await function that calls the Covid Tracking API and retrieves the JSON object with the data about the countries Covid cases.\nThe data.map creates a new array from calling a function and makes a variable with the name of the country.\n*/\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,gCAAgC;;AAE5C;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAO,IAAK;EAC1C,IAAIC,aAAa,GAAGH,GAAG;EAEvB,IAAIE,OAAO,EAAE;IACXC,aAAa,GAAI,GAAEH,GAAI,cAAaE,OAAQ,EAAC;EAC/C;EAEA,IAAI;IACF,MAAM;MAAEE,IAAI,EAAE;QAAEC,SAAS;QAAEC,SAAS;QAAEC;MAAO;IAAE,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACL,aAAa,CAAC;IAEjF,OAAO;MAAEE,SAAS;MAAEC,SAAS;MAAEC;IAAO,CAAC;EACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOA,KAAK;EACd;AACF,CAAC;;AAED;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;EACxC,IAAI;IACF,MAAM;MAAEN;IAAK,CAAC,GAAG,MAAML,KAAK,CAACS,GAAG,CAAC,gDAAgD,CAAC;IAElF,OAAOJ,IAAI,CAACO,GAAG,CAAC;MAAA,IAAC;QAAEC,QAAQ;QAAEN,SAAS;QAAEO;MAAM,CAAC;MAAA,OAAM;QAAER,SAAS,EAAEO,QAAQ;QAAEN,SAAS;QAAEC,MAAM,EAAEM;MAAM,CAAC;IAAA,CAAC,CAAC;EAC1G,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd,OAAOA,KAAK;EACd;AACF,CAAC;;AAED;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,cAAc,GAAG,YAAY;EACxC,IAAI;IACF,MAAM;MAAEV,IAAI,EAAE;QAAEW;MAAU;IAAE,CAAC,GAAG,MAAMhB,KAAK,CAACS,GAAG,CAAE,GAAER,GAAI,YAAW,CAAC;IAEnE,OAAOe,SAAS,CAACJ,GAAG,CAAET,OAAO,IAAKA,OAAO,CAACc,IAAI,CAAC;EACjD,CAAC,CAAC,OAAOP,KAAK,EAAE;IACd,OAAOA,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module"}